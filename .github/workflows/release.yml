name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: scaled
            asset_name: scaled-linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: scaled
            asset_name: scaled-linux-x86_64-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: scaled.exe
            asset_name: scaled-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: scaled
            asset_name: scaled-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: scaled
            asset_name: scaled-macos-aarch64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install musl-tools (for musl target)
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get update && sudo apt-get install -y musl-tools
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Rename binary
      run: |
        cd target/${{ matrix.target }}/release
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          mv ${{ matrix.binary_name }} ${{ matrix.asset_name }}
        else
          mv ${{ matrix.binary_name }} ${{ matrix.asset_name }}
        fi
      shell: bash
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.asset_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Display structure of downloaded files
      run: ls -la ./artifacts/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes in ${{ github.ref_name }}
          
          ### Download
          
          Choose the appropriate binary for your system:
          
          - **Linux x86_64**: `scaled-linux-x86_64`
          - **Linux x86_64 (static)**: `scaled-linux-x86_64-musl` 
          - **Windows x86_64**: `scaled-windows-x86_64.exe`
          - **macOS Intel**: `scaled-macos-x86_64`
          - **macOS Apple Silicon**: `scaled-macos-aarch64`
          
          ### Installation
          
          1. Download the binary for your platform
          2. Make it executable: `chmod +x scaled-*` (Linux/macOS)
          3. Move to your PATH: `sudo mv scaled-* /usr/local/bin/scaled` (Linux/macOS)
          
          ### Usage
          
          ```bash
          scaled --root C --mode major
          scaled --root F# --mode dorian --tuning D
          scaled --root A --mode minor --tuning D --drop
          ```
        draft: false
        prerelease: false
        files: |
          ./artifacts/scaled-linux-x86_64/scaled-linux-x86_64
          ./artifacts/scaled-linux-x86_64-musl/scaled-linux-x86_64-musl
          ./artifacts/scaled-windows-x86_64.exe/scaled-windows-x86_64.exe
          ./artifacts/scaled-macos-x86_64/scaled-macos-x86_64
          ./artifacts/scaled-macos-aarch64/scaled-macos-aarch64
